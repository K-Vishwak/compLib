{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let ChildComponent = /*#__PURE__*/(() => {\n  class ChildComponent {\n    constructor() {\n      this.callItsParent = new EventEmitter();\n    }\n\n    ngOnInit() {\n      console.log(this.parentProp);\n    }\n\n    childMethod() {\n      console.log('called from parent');\n      console.log(this.parentProp);\n    }\n\n    ngAfterViewChecked() {\n      console.log(this.parentProp);\n    }\n\n    callParent() {\n      this.callItsParent.emit();\n    }\n\n  }\n\n  ChildComponent.ɵfac = function ChildComponent_Factory(t) {\n    return new (t || ChildComponent)();\n  };\n\n  ChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChildComponent,\n    selectors: [[\"app-child\"]],\n    inputs: {\n      parentProp: \"parentProp\"\n    },\n    outputs: {\n      callItsParent: \"callItsParent\"\n    },\n    decls: 4,\n    vars: 0,\n    consts: [[3, \"click\"]],\n    template: function ChildComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"child works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function ChildComponent_Template_button_click_2_listener() {\n          return ctx.callParent(ctx.parentProp);\n        });\n        i0.ɵɵtext(3, \"Call Parent\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return ChildComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}